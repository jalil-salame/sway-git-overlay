# This flake was initially generated by fh, the CLI for FlakeHub (version 0.1.9)
{
  # A helpful description of your flake
  description = "An overlay for the git version of the sway window manager";

  # Flake inputs
  inputs.nixpkgs.url = "https://flakehub.com/f/NixOS/nixpkgs/0.1.*.tar.gz";
  inputs.flake-schemas.url = "https://flakehub.com/f/DeterminateSystems/flake-schemas/*.tar.gz";

  inputs.sway-git.url = "github:swaywm/sway";
  inputs.sway-git.flake = false;

  inputs.wlroots-git.url = "gitlab:wlroots/wlroots?host=gitlab.freedesktop.org";
  inputs.wlroots-git.flake = false;

  # Flake outputs that other flakes can use
  outputs = { self, flake-schemas, nixpkgs, wlroots-git, sway-git }:
    let
      # Helpers for producing system-specific outputs
      supportedSystems = [ "x86_64-linux" "aarch64-darwin" "x86_64-darwin" "aarch64-linux" ];
      forEachSupportedSystem = f: nixpkgs.lib.genAttrs supportedSystems (system: f {
        pkgs = import nixpkgs { inherit system; };
      });

      wlroots-git-package = pkgs: pkgs.wlroots.overrideAttrs (old: {
        version = "0.18.0-dev";
        src = wlroots-git;
      });
      sway-git-package = pkgs: pkgs.sway-unwrapped.overrideAttrs (old: {
        version = "git";
        src = sway-git;
        # Patch already merged
        patches = pkgs.lib.remove
          (pkgs.fetchpatch {
            name = "LIBINPUT_CONFIG_ACCEL_PROFILE_CUSTOM.patch";
            url = "https://github.com/swaywm/sway/commit/dee032d0a0ecd958c902b88302dc59703d703c7f.diff";
            hash = "sha256-dx+7MpEiAkxTBnJcsT3/1BO8rYRfNLecXmpAvhqGMD0=";
          })
          old.patches;
        buildInputs = [ (wlroots-git-package pkgs) ] ++ old.buildInputs;
      });
    in
    {
      # Schemas tell Nix about the structure of your flake's outputs
      inherit (flake-schemas) schemas;

      formatter = forEachSupportedSystem ({ pkgs }: pkgs.nixpkgs-fmt);

      packages = forEachSupportedSystem ({ pkgs }:
        let
          wlroots-git = wlroots-git-package pkgs;
          sway-git-unwrapped = sway-git-package pkgs;
          sway-git = pkgs.sway.override { sway-unwrapped = sway-git-unwrapped; };
        in
        {
          inherit wlroots-git sway-git-unwrapped sway-git;
          default = sway-git;
        });

      overlays =
        let
          sway-git-overlay = final: prev:
            let
              wlroots-git = wlroots-git-package prev;
              sway-git-unwrapped = sway-git-package prev;
            in
            {
              inherit wlroots-git sway-git-unwrapped;
              sway-git = prev.sway.override { sway-unwrapped = final.sway-git-unwrapped; };
            };
          replace-sway = final: prev:
            let
              wlroots-git = wlroots-git-package prev;
              sway-unwrapped = sway-git-package prev;
              # sway package will automatically pickup our sway-unwrapped package
            in
            { inherit wlroots-git sway-unwrapped; };
        in
        {
          sway-git = sway-git-overlay;
          replace-sway = replace-sway;
          default = sway-git-overlay;
        };

      # Development environments
      devShells = forEachSupportedSystem ({ pkgs }: { default = pkgs.mkShell { }; });
    };
}
